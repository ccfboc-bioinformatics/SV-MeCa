myConda = '/projects/ag-fbz/rnkouame/software/miniconda3/envs'
params {
    results = '/projects/ag-fbz/rnkouame/SV-MeCa/results'
    input = '/projects/ag-fbz/rnkouame/SV-MeCa/data/input.bam'
    //input = '/projects/ag-fbz/rnkouame/SV-MeCa/data/input.chr21_22.bam'
    reference = '/projects/ag-fbz/rnkouame/SV-MeCa/data/hs37d5.fa'
    //reference = '/projects/ag-fbz/rnkouame/SV-MeCa/data/hs37d5.chr21_22.fa'
    exclude_bed = '/projects/ag-fbz/rnkouame/SV-MeCa/data/b37.lumpy.exclude.bed'
    sonic_file = '/projects/ag-fbz/rnkouame/SV-MeCa/data/human_g1k_v37.sonic'
}



process{
    executor = 'slurm'
    clusterOptions = '--account=unikoeln'
	queue = 'fbz'

    
    withName: REFERENCE_INDEX {
        conda = "${myConda}/samtools"
        cpus = 1
        memory = {4.GB * task.attempt}
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: BAM_INDEX {
        conda = "${myConda}/samtools"
        cpus = 8
        memory = {8.GB * task.attempt}
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: BREAKDANCER {
        conda = "${myConda}/breakdancer"
        cpus = 4
        memory = {8.GB * task.attempt}
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: MANTA {
        conda = "${myConda}/manta"
        cpus = 16
        memory = {16.GB * task.attempt}
        //errorStrategy = 'retry'
        //maxRetries = 3
    }
    withName: LUMPY {
        conda = "${myConda}/smoove"
        cpus = 4
        memory = {8.GB * task.attempt}
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: DELLY {
        conda = "${myConda}/delly"
        cpus = 4
        memory = {8.GB * task.attempt}
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: PINDEL_SINGLE {
        conda = "${myConda}/pindel"
        cpus = 6
        memory = {12.GB * task.attempt}
        errorStrategy = 'retry'
        maxRetries = 2
    }
    withName: TARDIS_PREP {
        conda = "${myConda}/smoove"
        cpus = 8
        memory = {8.GB * task.attempt}
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: TARDIS {
        container = "/projects/ag-fbz/rnkouame/SV-MeCa/bin/tardis_latest.sif"
        cpus = 4
        memory = {8.GB * task.attempt}
        errorStrategy = 'retry'
        maxRetries = 3
    }
}

singularity {
    enabled = true 
    autMounts = true
}
trace {
    enabled = true
    file = 'trace.tsv'
    fields = 'task_id, hash, native_id, name, status, attempt, exit, realtime, cpus, %cpu, memory, %mem, rss, vmem, peak_rss, peak_vmem'
}